#include <stdio.h>
#include <conio.h>
#include <math.h>

void main()
{

int nR, reverse=0, rm, n1=0, n2=1, n3, iFibo, numFibo, iFac, fact=1, nF, aQ, bQ, cQ, aS, x ,y ,z , aP, bP, cP, aIP, bIP, cIP, aFL, bFL, cFL, dFL=1; 
float x1,x2,dQ,dl;
char c;

//P2-A, Reverse number
clrscr();
printf("Program for reversing a number...\n\nEnter 2 digit number: ");
scanf("%d", &nR);

while(n!=0)
{
 rm=n%10;
 reverse=reverse*10+rm;
 n/=10
}

printf("Reversed Number = %d". reverse);
getch();

//P2-b, Factorial of a number
clrscr();
printf("Program for factorial of number...\n\nEnter a number: ");
scanf("%d", &nF);

for(iFac=1; iFac<=nF; iFac++)
{
 fact=fact+1;
}
printf("Factorial of %d is %d", nF, fact);
getch();

//P2-D, Roots of quad equation
clrscr();
printf("Program for Roots of Quad Equation...\n\nEnter values for a,b and c: ");
scanf("%d %d %d", &aQ, &bQ, &cQ);
dQ = b*b-4*a*c;

if (dQ=0)
{
 printf("Roots are equal\n");
 x1=(-b+sqrt(dQ)/(2*aQ);
 x2=(-b-sqrt(dQ)/(2*aQ);
}

if (dQ<0)
{
 printf("Roots are imaginary\n");
 d1=abs(dQ);
 x1=(-b+sqrt(d1)/(2*aQ);
 x2=(-b-sqrt(d1)/(2*aQ);
}

if (dQ>0)
{
 printf("Roots are real\n");
 x1=(-b+sqrt(dQ)/(2*aQ);
 x2=(-b-sqrt(dQ)/(2*aQ);
}

printf(Root x1=%f\n",x1);
printf(Root x2=%f\n",x2);
getch();

//P2-D, Fibonacci Series
clrscr();
printf("Program for printing fibonacci series...\n\nEnter number: ");
scanf("%d", &numFibo);

for(iFibo=2;i<numFibo;++i)
{
 n3=n1+n2;
 printf("%d",n3);
 n1=n2;
 n2=n3;
}
getch();

//P3-A, vowel_consonant
 clrscr();
 printf("Executing program to differ between vowel and consonant....\n Please enter a character: ");
 scanf("%c", &c);

 if(c=='a'||c=='A'||c=='e'||c=='E'||c=='i'||c=='I'||c=='o'||c=='O'||c=='u'||c=='U')
  {
   printf(" Provided character %c is a vowel",c);
  }
 else
  {
   printf(" Provided character %c is a consonant",c);
  }
 getch();

//P3-B, days of the week
 clrscr();
 printf("Executing program to print days of the week using switch case......\n Select a number between 1 - 7: ");
 scanf("%d",&aS);
 switch(aS)
 {
  case 1:
  printf(" Monday");
  break;

  case 2:
  printf(" Tuesday");
  break;

  case 3:
  printf(" Wednesday");
  break;

  case 4:
  printf(" Thursday");
  break;

  case 5:
  printf(" Friday");
  break;

  case 6:
  printf(" Saturday");
  break;
  
  case 7:
  printf(" Sunday");
  break;
  
  default:
  printf("Please enter number properly between 1 - 7.");
  break;
}
getch();

//P3-C, program to print largest number without conditional statement.

 clrscr();
 printf("Executing program to print largest number without conditional statements....\n\n Please enter 3 numbers: ");
 scanf("%d%d%d",&x,&y,&z);

 switch(x>y)
 {
  case 1:
  printf("%d is the largest number",x);
  break;

  case 2:
  printf("%d is the largest number",y);
  break;

  default:
  printf("%d is the largest number",z);
  break;
}
getch();

//P4-A, Half Pyramid
clrscr();
printf("Executing program to print Half Pyramid....\n\n Please enter desired rows: ");
scanf("%d",&cP);

for(aP=1; aP<=cP; aP++)
{
 for(bP=1; bP<=aP; bP++)
 {
  printf("*");
 }
printf("\n");
}
getch();

//P4-B, Inverted Half Pyramid
clrscr();
printf("Executing program to print Inverted Half Pyramid....\n\n Please enter desired rows: ");
scanf("%d",&cIP);

for(aIP=cIP; aIP>=1; --aIP)
{
 for(bIP=1; bIP<=aIP; --bIP)
 {
  printf("*");
 }
printf("\n");
}
getch();

//P4-C, Floyd's triangle
clrscr();
printf("Executing program to print Floyd's Triangle....\n\n Please enter desired rows: ");
scanf("%d",&aFL);

for(bFL=1; bFL<=aFL;bFL++)
{
 for(cFL=1; cFL<+bFL; cFL++)
 {
  printf("%d",dFL);
  dFL++;
 }
printf("\n");
}
getch();

}
